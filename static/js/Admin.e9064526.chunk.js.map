{"version":3,"sources":["api/admin.ts","Me/Routes/Admin.tsx"],"names":["sendStaledRequestEmail","mentorshipId","a","makeApiCall","paths","MENTORSHIP","sendMentorNotActive","mentorId","ADMIN","response","success","data","freezeMentor","getUserRecords","userId","USERS","Mentee","styled","span","includeStr","str1","str2","toLocaleLowerCase","includes","Filters","div","pending","status","STATUS","new","viewed","UserDetails","mentorships","useState","isLoading","setIsLoading","dontActiveSent","setDontActiveSent","user","setUser","useEffect","Promise","all","getUser","then","recordsRes","userRes","find","type","finally","showCard","available","some","reminderSentAt","approved","rejected","Loader","Card","name","formatTimeAgo","createdAt","Button","onClick","window","confirm","_id","toast","record","channels","map","channel","getChannelInfo","url","icon","href","target","rel","className","id","Admin","sentOnly","setSentOnly","showDaysAgo","setShowDaysAgo","setName","mentorshipLoading","setMentorshipLoading","mentorshipRequests","setMentorshipRequests","filteredMentorshipRequests","useMemo","filter","mentor","mentee","date","Math","floor","daysAgo","Date","sort","b","getTime","monthAgo","setDate","getDate","from","getAllMentorshipRequests","sendEmail","useCallback","mentorship","toString","columns","column","rows","style","opacity","src","avatar","width","alt","email","disabled","title","FormField","Switch","isChecked","label","onToggle","size","Input","value","onChange","e","valueAsNumber","length"],"mappings":"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","file":"static/js/Admin.e9064526.chunk.js","sourcesContent":["import { makeApiCall, paths } from '.';\nimport { MentorshipRequest, UserRecord } from '../types/models';\n\nexport function getAllMentorshipRequests() {\n  const monthAgo = new Date();\n  monthAgo.setDate(monthAgo.getDate() - 30);\n  return makeApiCall<MentorshipRequest[]>(`${paths.MENTORSHIP}/requests`, {\n    from: monthAgo,\n  });\n}\n\nexport async function sendStaledRequestEmail(mentorshipId: string) {\n  await makeApiCall(\n    `${paths.MENTORSHIP}/requests/${mentorshipId}/reminder`,\n    null,\n    'PUT'\n  );\n}\n\nexport async function sendMentorNotActive(mentorId: string) {\n  const response = await makeApiCall<UserRecord>(\n    `${paths.ADMIN}/mentor/${mentorId}/notActive`,\n    null,\n    'PUT'\n  );\n  if (response?.success) {\n    return response.data;\n  }\n}\n\nexport async function freezeMentor(mentorId: string) {\n  await makeApiCall(`${paths.ADMIN}/mentor/${mentorId}/freeze`, null, 'PUT');\n}\n\nexport function getUserRecords(userId: string) {\n  return makeApiCall<UserRecord[]>(`${paths.USERS}/${userId}/records`);\n}","// THIS FILE IS WRITTEN UGLLLLY!!! DO NOT LEARN HOW TO CODE FROM IT!!!\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport {\n  freezeMentor,\n  getAllMentorshipRequests,\n  getUserRecords,\n  sendMentorNotActive,\n  sendStaledRequestEmail,\n} from '../../api/admin';\nimport Card from '../components/Card';\nimport type {\n  MentorshipUser,\n  MentorshipRequest,\n  User,\n  UserRecord,\n} from '../../types/models';\nimport { STATUS, Status } from '../../helpers/mentorship';\nimport { daysAgo, formatTimeAgo } from '../../helpers/time';\nimport Button from '../components/Button';\nimport { toast } from 'react-toastify';\nimport styled from 'styled-components';\nimport FormField from '../components/FormField';\nimport Switch from '../../components/Switch/Switch';\nimport Input from '../components/Input';\nimport { getUser } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { getChannelInfo } from '../../channelProvider';\n\nconst Mentee = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 2px;\n\n  img {\n    border-radius: 50%;\n  }\n`;\n\nconst includeStr = (str1: string, str2: string) =>\n  str1.toLocaleLowerCase().includes(str2.toLocaleLowerCase());\n\nconst Filters = styled.div`\n  width: 150px;\n`;\n\nconst pending = (status: Status) =>\n  status === STATUS.new || status === STATUS.viewed;\n\nconst UserDetails = ({\n  userId,\n  mentorships,\n}: {\n  userId: string;\n  mentorships: MentorshipRequest[];\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [dontActiveSent, setDontActiveSent] = useState<UserRecord>();\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    Promise.all([getUserRecords(userId), getUser(userId)])\n      .then(([recordsRes, userRes]) => {\n        setUser(userRes);\n        if (recordsRes?.success) {\n          setDontActiveSent(recordsRes.data.find(({ type }) => type === 1));\n        }\n      })\n      .finally(() => setIsLoading(false));\n  }, [userId]);\n\n  const showCard =\n    (!user || user.available) &&\n    mentorships.some(({ reminderSentAt }) => !!reminderSentAt) &&\n    !mentorships.some(\n      ({ status }) => status === STATUS.approved || status === STATUS.rejected\n    );\n\n  return isLoading ? (\n    <Loader />\n  ) : showCard ? (\n    <Card>\n      <div>{user!.name}</div>\n      {dontActiveSent ? (\n        <>\n          <div>Sent {formatTimeAgo(dontActiveSent.createdAt)}</div>\n          <Button\n            onClick={async () => {\n              if (\n                window.confirm('Are you sure you want to freeze this mentor?')\n              ) {\n                setUser({\n                  ...user!,\n                  available: false,\n                });\n                await freezeMentor(user!._id);\n                toast.success('Done');\n              }\n            }}\n          >\n            Freeze Mentor\n          </Button>\n        </>\n      ) : (\n        <Button\n          onClick={async () => {\n            const record = await sendMentorNotActive(user!._id);\n            setDontActiveSent(record);\n            toast.success('Done');\n          }}\n        >\n          Send Not Active mail\n        </Button>\n      )}\n      {user?.channels.map((channel) => {\n        const { url, icon } = getChannelInfo(channel);\n        return (\n          <div>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              <i className={`fa fa-${icon}`} />\n              {channel.id}\n            </a>\n          </div>\n        );\n      })}\n    </Card>\n  ) : (\n    <></>\n  );\n};\n\nconst Admin = () => {\n  const [sentOnly, setSentOnly] = useState(false);\n  const [showDaysAgo, setShowDaysAgo] = useState<number>(7);\n  const [name, setName] = useState('');\n  const [user, setUser] = useState<MentorshipUser>();\n  const [mentorshipLoading, setMentorshipLoading] = useState<string | null>();\n  const [mentorshipRequests, setMentorshipRequests] = useState<\n    MentorshipRequest[]\n  >([]);\n\n  const filteredMentorshipRequests = useMemo(() => {\n    return mentorshipRequests\n      .filter(({ reminderSentAt, mentor, mentee, date }) => {\n        return (\n          (!sentOnly || !!reminderSentAt) &&\n          (!showDaysAgo ||\n            name ||\n            Math.floor(daysAgo(new Date(date))) === showDaysAgo) &&\n          (!name ||\n            includeStr(mentor.name, name) ||\n            includeStr(mentee.name, name))\n        );\n      })\n      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n  }, [mentorshipRequests, name, sentOnly, showDaysAgo]);\n\n  useEffect(() => {\n    getAllMentorshipRequests().then((response) => {\n      if (response?.success) {\n        setMentorshipRequests(\n          response.data.filter(({ mentor, mentee }) => !!mentor && !!mentee)\n        );\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    setName(user?.name || '');\n  }, [user]);\n\n  const sendEmail = useCallback(\n    async (mentorshipId: string) => {\n      setMentorshipLoading(mentorshipId);\n      await sendStaledRequestEmail(mentorshipId);\n      setMentorshipRequests(\n        mentorshipRequests.map((mentorship) => {\n          if (mentorship.id === mentorshipId) {\n            return {\n              ...mentorship,\n              reminderSentAt: new Date().toString(),\n            };\n          }\n          return mentorship;\n        })\n      );\n      setMentorshipLoading(null);\n      toast.success('Email sent');\n    },\n    [mentorshipRequests]\n  );\n\n  const columns = useMemo(\n    () =>\n      ['Mentor', 'Mentee', 'Status', 'Created', 'Sent'].map((column) => (\n        <td key={column}>{column}</td>\n      )),\n    []\n  );\n\n  const rows = useMemo(\n    () =>\n      filteredMentorshipRequests.map(\n        ({ mentor, mentee, status, date, id, reminderSentAt }) => {\n          return (\n            <tr style={{ opacity: mentor.available ? 1 : 0.5 }} key={id}>\n              <td>\n                <span onClick={() => setUser(mentor)}>{mentor.name}</span>\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href={`/u/${mentor.id}`}\n                >\n                  🔗\n                </a>\n              </td>\n              <td>\n                <Mentee onClick={() => setUser(mentee)}>\n                  <img src={mentee.avatar} width=\"20\" alt=\"\" />\n                  {mentee.name}\n                  <a\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    href={`mailto:${mentee.email}`}\n                  >\n                    🔗\n                  </a>\n                  <a\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    href={`/u/${mentee.id}`}\n                  >\n                    @\n                  </a>\n                </Mentee>\n              </td>\n              <td>{status}</td>\n              <td>{formatTimeAgo(new Date(date))}</td>\n              <td>\n                {reminderSentAt ? formatTimeAgo(new Date(reminderSentAt)) : 0}\n              </td>\n              <td>\n                {pending(status) && (\n                  <Button\n                    disabled={!!reminderSentAt}\n                    title={\n                      reminderSentAt && `Sent at ${new Date(reminderSentAt)}`\n                    }\n                    isLoading={id === mentorshipLoading}\n                    onClick={() => sendEmail(id)}\n                  >\n                    Send Email\n                  </Button>\n                )}\n              </td>\n            </tr>\n          );\n        }\n      ),\n    [filteredMentorshipRequests, mentorshipLoading, sendEmail]\n  );\n\n  return (\n    <>\n      {user && (\n        <UserDetails\n          userId={user.id}\n          mentorships={filteredMentorshipRequests}\n        />\n      )}\n      <Card>\n        <Filters>\n          <FormField>\n            <Switch\n              isChecked={sentOnly}\n              label=\"Sent Only\"\n              onToggle={setSentOnly}\n              size=\"small\"\n            />\n          </FormField>\n          <FormField>\n            <Input\n              type=\"number\"\n              value={showDaysAgo}\n              onChange={(e) => setShowDaysAgo(e.target.valueAsNumber || 0)}\n            />\n          </FormField>\n          <FormField label=\"User\">\n            <Input\n              type=\"search\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </FormField>\n        </Filters>\n        {rows.length ? (\n          <table>\n            <thead>\n              <tr>{columns}</tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </table>\n        ) : (\n          <>No requests</>\n        )}\n      </Card>\n    </>\n  );\n};\n\nexport default Admin;\n"],"sourceRoot":""}